{
  "enabled": true,
  "name": "Code Quality Analyzer",
  "description": "Monitors source code files for changes and analyzes modified code for potential improvements including code smells, design patterns, and best practices. Generates suggestions for improving code quality while maintaining existing functionality.",
  "version": "1",
  "when": {
    "type": "userTriggered",
    "patterns": [
      "src/**/*.ts",
      "src/**/*.vue",
      "electron/**/*.ts",
      "*.ts",
      "*.js"
    ]
  },
  "then": {
    "type": "askAgent",
    "prompt": "Analyze the modified code in the changed files for potential improvements. Focus on:\n\n1. **Code Smells**: Identify any code smells like long methods, large classes, duplicate code, or complex conditionals\n2. **Design Patterns**: Suggest appropriate design patterns that could improve the code structure\n3. **Best Practices**: Check adherence to TypeScript/Vue.js/Electron best practices\n4. **Readability**: Suggest improvements for code clarity and documentation\n5. **Maintainability**: Identify areas that could be refactored for better maintainability\n6. **Performance**: Suggest optimizations that don't compromise functionality\n7. **Type Safety**: Ensure proper TypeScript usage and type definitions\n8. **Vue.js Specific**: Check for proper Composition API usage, component structure, and reactivity patterns\n9. **Database/ORM**: Validate Drizzle ORM usage and database interaction patterns\n\nProvide specific, actionable suggestions with code examples where helpful. Maintain the existing functionality while improving code quality. Consider the project's tech stack: Vue 3, TypeScript, Electron, Drizzle ORM, and Pinia."
  }
}